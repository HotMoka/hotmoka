# In order to create the image:
#
# docker buildx build --platform linux/amd64 -t hotmoka/mokamint-node:latest -f dockerfiles/mokamint-node/mokamint-node .
#
# In order to publish a node at port 8001 whose underlying Mokamint node is published at port 8030:
# create a local directory "mokamint_node" containing three files, named exactly as follows:
#
# miner.pem
# node.pem
# plot.plot
#
# Then run:
#
# docker run -it --name mokamint_node -e KEY_OF_GAMETE=BFtoCuWq962dRyW5Mq311Na7qQmXjhH9gk4kp1AfAxMz -e CHAIN_ID=caatinga -p 8001:8001 -p 8030:8030 -v chain:/home/hotmoka/chain -v ./mokamint_node:/home/hotmoka/mokamint_node hotmoka/mokamint-node:latest init
#
# (assuming that the public Base58 key of the gamete will be BFtoCuWq962dRyW5Mq311Na7qQmXjhH9gk4kp1AfAxMz and that the chain identifier will be caatinga; this chain identifier
# must coincide with that used in plot.plot; similarly, plot.plot must use node.pem as key for signing the blocks and miner.pem as key for signing the deadlines)
#
# When the docker container has initialized the node, you can detach from it with CTRL+P CTRL+Q
#
# Later you can stop the container with:
# docker stop mokamint_node

FROM openjdk:19-jdk-slim
LABEL "maintainer"="fausto.spoto@hotmoka.io"

USER root
WORKDIR /usr/local/bin
    
# install missing packages
RUN apt-get update \
  && apt-get install -y python3 \
  && rm -rf /var/lib/apt/lists/*

# create hotmoka user
RUN groupadd -r hotmoka \
  && useradd --no-log-init -r -m -g hotmoka hotmoka

# create a volume for the chain of this container and make it writable to everyone
RUN mkdir /home/hotmoka/chain \
  && chmod -R a+w /home/hotmoka/chain

# install moka and its alias moka-no-logs that does not report logs
COPY io-hotmoka-moka/modules/ /modules/
# we add /home/hotmoka to the classpath in order to find the logging properties file
RUN echo java -Djava.util.logging.config.file=logging.properties --module-path /modules/explicit:/modules/automatic --class-path \"/home/hotmoka/:/modules/unnamed/*\" --add-modules org.glassfish.tyrus.container.grizzly.server,org.glassfish.tyrus.container.grizzly.client --module io.hotmoka.moka/io.hotmoka.moka.Moka \"\$@\" > moka \
  && chmod a+x moka \
  && echo java --module-path /modules/explicit:/modules/automatic --class-path \"/home/hotmoka/:/modules/unnamed/*\" --add-modules org.glassfish.tyrus.container.grizzly.server,org.glassfish.tyrus.container.grizzly.client --module io.hotmoka.moka/io.hotmoka.moka.Moka \"\$@\" > moka-no-logs \
  && chmod a+x moka-no-logs

# install the control scripts
COPY dockerfiles/mokamint-node/help help
COPY dockerfiles/mokamint-node/init init
#COPY dockerfiles/mokamint-node/resume resume
#COPY dockerfiles/mokamint-node/start start
RUN chmod 755 help && chmod 755 init #&& chmod 755 resume && chmod 755 start

USER hotmoka
WORKDIR /home/hotmoka

# install the logging configuration
COPY --chown=hotmoka dockerfiles/logging.properties logging.properties

# install the default Mokamint configuration
COPY --chown=hotmoka io-hotmoka-moka/mokamint_configs/default.cfg mokamint_config.cfg

# by default, print a help message
CMD help